# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    
    always_authenticate_before_granting: true
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        MH4Editor\MH4EditorBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:

        user_db:
            entity:
                class: MH4Editor\MH4EditorBundle\Entity\User
                property: username

        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        default:
            anonymous: ~
            provider: user_db
            form_login:
                # submit the login form here
                check_path: mh4_login_check

                # the user is redirected here when they need to log in
                login_path: mh4_login_frontend

                # if true, forward the user to the login form instead of redirecting
                use_forward: true

                # login success redirecting options (read further below)
                always_use_default_target_path: true
                default_target_path:            mh4_editor_homepage
                target_path_parameter:          _target_path
                use_referer:                    true

                # login failure redirecting options (read further below)
                failure_path:    mh4_login_frontend
                failure_forward: false
                failure_path_parameter: _failure_path

                # field names for the username and password fields
                username_parameter: _mh4username
                password_parameter: _mh4password

                # csrf token options
                #csrf_parameter: _csrf_token
                intention:      authenticate
                # by default, the login form *must* be a POST, not a GET
                post_only:      true
                remember_me:    false

                # by default, a session must exist before submitting an authentication request
                # if false, then Request::hasPreviousSession is not called during authentication
                # new in Symfony 2.3
                require_previous_session: true
            logout:
                path: mh4_logout_frontend
                target: /
                success_handler: app.user_logout_success_listener
                invalidate_session: false
        # the login page has to be accessible for everybody
        # secures part of the application
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/connector, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/user/confirm/token/, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/api/v1, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY} #//, requires_channel: https
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN}
        - { path: ^/, roles: ROLE_USER }
        